
let { ... } = import("std/regex");

export let compileWith(src: String, keys: List<String>, values: List<Regex>): CompiledRegex | Bubble {
  let regex = parseWith(src, keys, values);
  regex.compiled()
}

export let compile(src: String): CompiledRegex | Bubble {
  let regex = parse(src);
  regex.compiled()
}

export let parseWith(src: String, keys: List<String>, values: List<Regex>): Regex | Bubble {
  let parser = new Parser(src);
  for (var i = 0; i < keys.length && i < values.length; i++) {
    let val = values[i];
    parser.addRegex(keys[i], val);
  }
  parser.readOr()
}

export let parse(src: String): Regex | Bubble {
  let parser = new Parser(src);
  parser.readOr()
}
